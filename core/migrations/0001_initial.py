# Generated by Django 5.1.2 on 2024-10-29 03:51

import core.models
import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import imagekit.models.fields
import re
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('order', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(max_length=5000)),
                ('slug', models.SlugField(help_text='Enter a unique, descriptive URL path (e.g. based on the name) containing only lowercase letters, numbers,  and hyphens (instead of spaces). ', unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid'), core.models.validate_lowercase])),
                ('published', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(1)])),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('email_address', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('message', models.TextField(max_length=5000, validators=[django.core.validators.MinLengthValidator(10)])),
                ('contact_time', models.DateTimeField(auto_now_add=True)),
                ('responded_to', models.BooleanField(default=False)),
                ('resolved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Site Name', max_length=150)),
                ('address', models.CharField(default='Default Address', max_length=255)),
                ('phone', models.CharField(default='977', max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', models.ImageField(upload_to='logos/')),
                ('about', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('large_image', imagekit.models.fields.ProcessedImageField(help_text='Upload images with a width of 2000px or greater to avoid low visual quality (e.g. pixelation) on larger screen sizes.', upload_to='', verbose_name='image file')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text='Enter a unique, descriptive URL path (e.g. based on the title) containing only lowercase letters, numbers,  and hyphens (instead of spaces). ', max_length=60, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid'), core.models.validate_lowercase])),
                ('description', models.TextField(max_length=5000)),
                ('location', models.CharField(help_text='Enter the specific location where the photo was taken.', max_length=255)),
                ('date_taken', models.DateField()),
                ('featured', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=True)),
                ('last_modified', models.DateTimeField(auto_now=True, null=True)),
                ('collections', models.ManyToManyField(blank=True, to='core.collection')),
            ],
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=50)),
                ('icon', models.ImageField(upload_to='social_icons/')),
                ('url', models.URLField()),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='core.setting')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('image', models.ImageField(upload_to='posts/')),
                ('is_published', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('slug', models.SlugField(help_text='Enter a unique, descriptive URL path (e.g. based on the title) containing only lowercase letters, numbers,  and hyphens (instead of spaces). ', max_length=60, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid'), core.models.validate_lowercase])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.category')),
                ('tags', models.ManyToManyField(to='core.tag')),
            ],
        ),
    ]
